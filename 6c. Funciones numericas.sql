USE SPRINGFIELD;

/* SQRT()
Raiz cuadrada*/

SELECT SQRT(9), SQRT(2.7), SQRT(-9); /*Raiz cuadrada de un número negativo, no existe, devuelve nulo.*/

/* POW(), POWER()
Potencias.*/

SELECT POW(3,2), POWER(3,2);

/* ABS()
Devuelve el número sin signo.*/

SELECT ABS(5) ABS1, ABS(-3) ABS2, ABS(0) ABS3, ABS(-5.3) ABS4, ABS(-5*3) ABS5;

/* SIGN()
Devuelve 1 si el signo es positivio, -1 si es negativo o 0 si es es 0.*/

SELECT SIGN(5) SIGNO1
, SIGN(-5) SIGNO2
, SIGN(0) SIGNO3
;

/* COUNT(), SUM(), MAX(), MIN(), AVG()
Funciones de agrupación*/

SELECT SUM(TOTAL_MASCOTAS) TOTAL_MASCOTAS
FROM (SELECT FAM.DESC_FAMILIA, COUNT(*) TOTAL_MASCOTAS
FROM MASCOTAS MAS
INNER JOIN FAMILIAS FAM ON MAS.ID_FAMILIA=FAM.ID_FAMILIA 
GROUP BY FAM.DESC_FAMILIA) A;

SELECT MAX(TOTAL_MASCOTAS) TOTAL_MASCOTAS
FROM (SELECT FAM.DESC_FAMILIA, COUNT(*) TOTAL_MASCOTAS
FROM MASCOTAS MAS
INNER JOIN FAMILIAS FAM ON MAS.ID_FAMILIA=FAM.ID_FAMILIA 
GROUP BY FAM.DESC_FAMILIA) A;

SELECT SUM(TOTAL_MASCOTAS) MAX_TOTAL_MASCOTAS
FROM (SELECT FAM.DESC_FAMILIA, COUNT(*) TOTAL_MASCOTAS
FROM MASCOTAS MAS
INNER JOIN FAMILIAS FAM ON MAS.ID_FAMILIA=FAM.ID_FAMILIA 
GROUP BY FAM.DESC_FAMILIA) A;

SELECT MIN(TOTAL_MASCOTAS) MIN_TOTAL_MASCOTAS
FROM (SELECT FAM.DESC_FAMILIA, COUNT(*) TOTAL_MASCOTAS
FROM MASCOTAS MAS
INNER JOIN FAMILIAS FAM ON MAS.ID_FAMILIA=FAM.ID_FAMILIA 
GROUP BY FAM.DESC_FAMILIA) A;

CREATE VIEW VW_MASCOTAS AS
SELECT FAM.DESC_FAMILIA, COUNT(*) TOTAL_MASCOTAS
FROM MASCOTAS MAS
INNER JOIN FAMILIAS FAM ON MAS.ID_FAMILIA=FAM.ID_FAMILIA 
GROUP BY FAM.DESC_FAMILIA;

SELECT SUM(TOTAL_MASCOTAS) TOTAL_MASCOTAS
FROM VW_MASCOTAS;

SELECT MAX(TOTAL_MASCOTAS) MAX_TOTAL_MASCOTAS
FROM VW_MASCOTAS;

SELECT MIN(TOTAL_MASCOTAS) MAX_TOTAL_MASCOTAS
FROM VW_MASCOTAS;

SELECT AVG(TOTAL_MASCOTAS) MEDIA_TOTAL_MASCOTAS
FROM VW_MASCOTAS;

/* DIV, MOD
División cociente, resto*/

SELECT 6 DIV 2;

SELECT 7 DIV 2;

SELECT 9 DIV -3;

SELECT 6 MOD 2;

SELECT 7 MOD 2;

SELECT 9 MOD -3;

SELECT 8 MOD -3;


/* ROUND() TRUNCATE() CEIL() FLOOR()
Redondeo, truncar, número entero mayor, número entero menor*/

SELECT ROUND(1234.56389), ROUND(1234.56389,3), ROUND(-1234.56789);

SELECT ROUND(1234.56389,2), ROUND(1234.56389,-2); /*Con -2 redonde a la centena.*/

SELECT TRUNCATE(1234.56389,0), TRUNCATE(1234.56389,3), TRUNCATE(1234.56789,-2);

SELECT CEIL(42.65)
, CEILING(42.65)
, CEILING(-42.65);

SELECT FLOOR(42.65), FLOOR(-42.65);


/* RAND()
Número aleatorio*/

SELECT RAND(), RAND(9);

/* GREATEST
El mayor. El ejemplo no tiene mucho sentido.*/

SELECT ID_PERSONAJE, GREATEST(IFNULL(ID_FAMILIA,0),ID_SEXO,IFNULL(ID_MATRIMONIO,0),IFNULL(ID_LUGAR_RESIDENCIA,0)) ID_MAYOR
FROM PERSONAJES;

/* LEAST
El menor. El ejemplo no tiene mucho sentido.*/

SELECT ID_PERSONAJE, LEAST(IFNULL(ID_FAMILIA,0),ID_SEXO,IFNULL(ID_MATRIMONIO,0),IFNULL(ID_LUGAR_RESIDENCIA,0)) ID_MAYOR
FROM PERSONAJES;

/* EXP()
e elevado a un número.*/

SELECT EXP(1), EXP(0), EXP(2), EXP(-2);

/*LN()
Logaritmo nepariano.*/

SELECT LN(1), LN(0), LN(2), LN(2.7), LN(-1);

/* LOG10
Logaritmo en base 10*/

SELECT LOG10(1), LOG10(0), LOG10(2), LOG10(2.7), LOG10(-1), LOG10(100);

/* LOG2
Logaritmo en base 2*/

SELECT LOG2(1), LOG2(0), LOG2(2), LOG2(2.7), LOG2(-1);

SELECT LOG(7,1), LOG(7,0), LOG(7,-1), LOG(7,2.7);

/* RADIANS(), DEGREES(), PI(), SIN(), COS(), COT(), ASIN(), ACOS(), ATAN()
Funciones trignométricas.*/

SELECT RADIANS(0), RADIANS(45), DEGREES(0), DEGREES(0.78), DEGREES(PI());

SELECT PI()*1.00000000000000000000000000000;/*Sólo devuelve los primeros 15 decimales*/

SELECT SIN(0), SIN(90), SIN(-90);

SELECT COS(0), COS(45), COS(-45);

SELECT COT(0), COT(45), COT(-45);

SELECT ASIN(0), ASIN(45), ASIN(-45), ASIN(0.99), ASIN(-0.99);

SELECT ACOS(0), ACOS(45), ACOS(-45), ACOS(0.99), ACOS(-0.99);

SELECT ATAN(0), ATAN(45), ATAN(-45), ATAN(0.99), ATAN(-0.99);
