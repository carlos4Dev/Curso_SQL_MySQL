USE SPRINGFIELD;

/*Mostrar total de miembmros de cada familia, ordenados de mayor a menor.*/

SELECT FAM.DESC_FAMILIA, COUNT(*) TOTAL_MIEMBROS
FROM PERSONAJES PER
LEFT OUTER JOIN FAMILIAS FAM ON PER.ID_FAMILIA=FAM.ID_FAMILIA
WHERE FAM.DESC_FAMILIA NOT IN ('SIMPSONS','FLANDERS') OR ISNULL(FAM.DESC_FAMILIA)
GROUP BY FAM.DESC_FAMILIA
ORDER BY TOTAL_MIEMBROS DESC
;

/*Cuántas familias hay de 3 miembros. Se puede usar tambien con alias,
HAVING TOTAL_MIEMBROS=3 
Para mostrar cuántas familias de más de 3 miembros, HAVING TOTAL_MIEMBROS>=3*
Las familias de entre 3 y 5, HAVING TOTAL_MIEMBROS BETWEEN 3 AND 5 */

SELECT FAM.DESC_FAMILIA, COUNT(*) TOTAL_MIEMBROS
FROM PERSONAJES PER
LEFT OUTER JOIN FAMILIAS FAM ON PER.ID_FAMILIA=FAM.ID_FAMILIA
WHERE FAM.DESC_FAMILIA NOT IN ('SIMPSONS','FLANDERS') OR ISNULL(FAM.DESC_FAMILIA)
GROUP BY FAM.DESC_FAMILIA
HAVING COUNT(*)=3
;

/*Qué personajes no sabemos dónde viven.*/

SELECT DESC_PERSONAJE
FROM PERSONAJES
WHERE ID_LUGAR_RESIDENCIA IS NULL;

/*Qué personajes viven en la calle Evergreen Terrace*/

SELECT PER.DESC_PERSONAJE, LUG.DESC_LUGAR DESC_LUGAR_RESIDENCIA
FROM PERSONAJES PER
LEFT OUTER JOIN LUGARES LUG ON PER.ID_LUGAR_RESIDENCIA=LUG.ID_LUGAR
WHERE LUG.DESC_LUGAR LIKE '%EVERGREEN%TERRACE%'
;

/*Cuales son las diferentes direcciones que hay en Evergreen Terrace,
ordenados por ID_LUGAR_RESIDENCIA, en este caso solo hay un campo.
Se ordenan alfabeticamente, porque son cadenas de texto.*/

SELECT DISTINCT LUG.DESC_LUGAR DESC_LUGAR_RESIDENCIA
FROM PERSONAJES PER
LEFT OUTER JOIN LUGARES LUG ON PER.ID_LUGAR_RESIDENCIA=LUG.ID_LUGAR
WHERE LUG.DESC_LUGAR LIKE '%EVERGREEN%TERRACE%'
ORDER BY 1
;

/*Qué personajes viven en Evergreen Terrace y además trabajan en la central nuclear.
Como la condición es que viven en una calle específica, no puede devolver registros nulos.
Se puede usar INNER JOIN */

SELECT PER.DESC_PERSONAJE, LUG.DESC_LUGAR DESC_LUGAR_RESIDENCIA, LUG2.DESC_LUGAR DESC_LUGAR_PROFESION
FROM PERSONAJES PER
INNER JOIN LUGARES LUG ON PER.ID_LUGAR_RESIDENCIA=LUG.ID_LUGAR
INNER JOIN LUGARES LUG2 ON PER.ID_LUGAR_PROFESION=LUG2.ID_LUGAR
WHERE LUG.DESC_LUGAR LIKE '%EVERGREEN%TERRACE%'
AND LUG2.DESC_LUGAR LIKE '%NUCLEAR%'
;

/*Qué personajes viven en Evergreen Terrace y además trabajan en la central nuclear, o que sean mujeres.
En este caso hay que utilizar LEFT OUTER JOIN, para que coja los datos que sean nulos,
excepto en el campo SEXO que sólo pueden ser hombre o mujer.
Ordenar por lugar de residencia de manera ascendente, después por el sexo de manera descendente
y por el nombre de manera ascendente. Primero aparecerán los nulos.*/

SELECT PER.DESC_PERSONAJE, LUG.DESC_LUGAR DESC_LUGAR_RESIDENCIA, LUG2.DESC_LUGAR DESC_LUGAR_PROFESION, SEXO.DESC_SEXO
FROM PERSONAJES PER
LEFT OUTER JOIN LUGARES LUG ON PER.ID_LUGAR_RESIDENCIA=LUG.ID_LUGAR
LEFT OUTER JOIN LUGARES LUG2 ON PER.ID_LUGAR_PROFESION=LUG2.ID_LUGAR
INNER JOIN SEXO SEXO ON PER.ID_SEXO=SEXO.ID_SEXO
WHERE (LUG.DESC_LUGAR LIKE '%EVERGREEN%TERRACE%' AND LUG2.DESC_LUGAR LIKE '%NUCLEAR%') OR SEXO.DESC_SEXO='MUJER'
ORDER BY 2 ASC, 4 DESC, 1 ASC
;

/*Listar sólo 10 lugares de residencia.*/

SELECT DISTINCT LUG1.DESC_LUGAR DESC_LUGAR_RESIDENCIA
FROM PERSONAJES PER
INNER JOIN LUGARES LUG1 ON PER.ID_LUGAR_RESIDENCIA=LUG1.ID_LUGAR
LIMIT 10
;

/*Qué familias tienen mascotas y que personajes tienen mascotas, 
mostrando el nombre de la mascota.*/

SELECT FAM.DESC_FAMILIA, PER.DESC_PERSONAJE, MAS.DESC_MASCOTA
FROM FAMILIAS FAM
INNER JOIN MASCOTAS MAS ON FAM.ID_FAMILIA=MAS.ID_FAMILIA
INNER JOIN PERSONAJES PER ON FAM.ID_FAMILIA=PER.ID_FAMILIA
;

/*Qué personajes tienen frases famoasas, ordenados por nombre.*/

SELECT DISTINCT PER.DESC_PERSONAJE, FRA.DESC_FRASE
FROM PERSONAJES PER
INNER JOIN FRASES FRA ON PER.ID_PERSONAJE=FRA.ID_PERSONAJE
ORDER BY 1
;
